name: Deploy to Cloudflare Pages

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Generate deployment name
        id: deployment-name
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            DEPLOYMENT_NAME="rovis-pr-${{ github.event.number }}"
          elif [ "${{ github.ref_name }}" = "main" ]; then
            DEPLOYMENT_NAME="rovis-technologies"
          else
            DEPLOYMENT_NAME="rovis-${{ github.ref_name }}"
          fi
          echo "name=$DEPLOYMENT_NAME" >> $GITHUB_OUTPUT
          echo "### 🚀 Deployment: $DEPLOYMENT_NAME" >> $GITHUB_STEP_SUMMARY

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ steps.deployment-name.outputs.name }}
          directory: out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Add deployment info
        run: |
          echo "## ✅ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "**🔗 URL:** ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**📝 Project:** ${{ steps.deployment-name.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "**🌿 Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const name = '${{ steps.deployment-name.outputs.name }}';
            
            const comment = `## 🚀 Preview Ready!
            
            **🔗 Preview URL:** ${url}
            **📝 Deployment:** \`${name}\`
            
            ---
            *Updated from commit ${{ github.sha }}*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });